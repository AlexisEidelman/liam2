       
entities:
    household:
        fields:
            # period is implicit
            # id is implicit
            - dead:         bool
            - start_period: {type: int, initialdata: false}
            - nb_persons:   {type: int, initialdata: false} 
            - nb_students:  {type: int, initialdata: false}            
            - nch0_11:      {type: int, initialdata: false}
            - nch12_15:     {type: int, initialdata: false}
            - region_id:    {type: int, initialdata: false}

        links:
            persons: {type: one2many, target: person, field: hh_id}
            
        processes:
            region_id: "if(region_id < 0, choice([0, 1, 2, 3], [0.1, 0.2, 0.3, 0.4]), region_id)"
            household_composition:
                - nb_persons: "countlink(persons)"
                - nb_students: "countlink(persons, workstate == 3)"
                - nch0_11: "countlink(persons, (age <12))"
                - nch12_15: "countlink(persons, (age>11) and (age <16))"
            
    person:
        fields:
            # period is implicit
            # id is implicit
            - age:          int
            - dead:         bool
            - gender:       bool
            - m_id:         int
            - m_age:        {type: int, initialdata: false}
            - partner_id:   int
            - civilstate:   int     # 1=single, 2=married, 3=divorced, 4=widowed
            - dur_in_couple:      int
            - workstate:    int     # 1=in work, 2=unemployed including old-age unemployed,3=in education, 4=retired,5=other inactive
            - inwork:   {type: bool, initialdata: false}
            - education_level:       {type: int, initialdata: false}
            - agegroup_work:     {type: int, initialdata: false}
            - agegroup_civilstate:     {type: int, initialdata: false}                        
            - hh_id:        int
        
        links:
            pm: {type: many2one, target: person, field: m_id}      
            ps: {type: many2one, target: person, field: partner_id}
            ph: {type: many2one, target: household, field: hh_id}
            mp: {type: one2many, target: person, field: m_id}      
                   
        # possible transitions and regressions. The actual list used in the
        # simulation must be defined below
        processes:
            age: "age + 1"
                
            agegroup:
                - agegroup_civilstate: "if(age<50, 5*trunc(age/5), 10*trunc(age/10))"            
                - agegroup_work: "if(age<70, 5*trunc(age/5), 70)"
                
            dump_household_info: "csv(dump(id, age, gender, ph.nb_persons, pm.age, ps.age, hh_id),suffix='hh_info')"
            
simulation:
    init:
        - household: [household_composition, region_id]
        - person: [agegroup, dump_household_info]

    processes:
        - household: [household_composition, region_id]
        - person: [age, agegroup, dump_household_info]      

    input:
        file: "simple2001.h5"
    output:
        file: "simulation.h5"

    start_period: 2002   # first simulated period
    periods: 1
